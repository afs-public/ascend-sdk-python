"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from ascend_sdk import SDK
from ascend_sdk.models import components
import os
from tests.test_client import create_test_http_client


def test_asset_trading_config_asset_trading_config_get_asset_trading_config():
    test_http_client = create_test_http_client(
        "AssetTradingConfig_GetAssetTradingConfig"
    )

    with SDK(
        server_url=os.getenv("SERVICE_ACCOUNT_CREDS_URL", ""),
        security=components.Security(
            api_key=os.getenv("API_KEY", "value"),
            service_account_creds=components.ServiceAccountCreds(
                private_key=os.getenv("SERVICE_ACCOUNT_CREDS_PRIVATE_KEY", "value"),
                name=os.getenv("SERVICE_ACCOUNT_CREDS_NAME", "value"),
                organization=os.getenv("SERVICE_ACCOUNT_CREDS_ORGANIZATION", "value"),
                type=os.getenv("SERVICE_ACCOUNT_CREDS_TYPE", "value"),
            ),
        ),
        client=test_http_client,
    ) as sdk:
        assert sdk is not None

        res = sdk.asset_trading_config.get_asset_trading_config(
            correspondent_id=os.getenv("CORRESPONDENT_ID", ""), asset_id="5999765"
        )
        assert res.http_meta is not None
        assert res.http_meta.response is not None
        assert res.http_meta.response.status_code == 200


def test_asset_trading_config_asset_trading_config_list_asset_trading_configs():
    test_http_client = create_test_http_client(
        "AssetTradingConfig_ListAssetTradingConfigs"
    )

    with SDK(
        server_url=os.getenv("SERVICE_ACCOUNT_CREDS_URL", ""),
        security=components.Security(
            api_key=os.getenv("API_KEY", "value"),
            service_account_creds=components.ServiceAccountCreds(
                private_key=os.getenv("SERVICE_ACCOUNT_CREDS_PRIVATE_KEY", "value"),
                name=os.getenv("SERVICE_ACCOUNT_CREDS_NAME", "value"),
                organization=os.getenv("SERVICE_ACCOUNT_CREDS_ORGANIZATION", "value"),
                type=os.getenv("SERVICE_ACCOUNT_CREDS_TYPE", "value"),
            ),
        ),
        client=test_http_client,
    ) as sdk:
        assert sdk is not None

        res = sdk.asset_trading_config.list_asset_trading_configs(
            request={
                "correspondent_id": os.getenv("CORRESPONDENT_ID", ""),
                "asset_id": "-",
            }
        )
        assert res.http_meta is not None
        assert res.http_meta.response is not None
        assert res.http_meta.response.status_code == 200
